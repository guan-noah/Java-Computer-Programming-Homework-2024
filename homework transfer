//Hailstone.java
/* Noah Guan
 * 11-06-2024
 * Per. 6 Java w/ Mr. Yu
 * Hailstone.java
 * Program #28 
 * Pseudocode: 
import scanner 
class header 
	D&I int field variable hailstoneNum, count
	constructor 
		hailstoneNum = 0; 
		count = 0;
	main header 
		create an instance of hailstone
		call findIt method 
	findIt header 
		loop to call other methods 
			sentinel value: -1 
		System.out.println("Thank you for playing Hailstone. ");
	getInput header 
		prompt user for int hailstone number
			//Enter a positive integer ( 1 - 10000 ). To quit, enter -1:\t
		reinitialize field variable to user input 
	calculateHailstone
		if hailstoneNum <= 0 or hailstoneNum > 10000;
			System.out.println("Enter a value within the range, please!");
		else 
		{
			do
			{
				printSequence(hailstoneNum)
				if hailstoneNum % 2 = 0 
					hailstoneNum = hailstoneNum/2;
				else 
					hailstoneNum = 3*hailstoneNum + 1;
				count++
			}while (hailstoneNum != -1);	
		}
	printSequence header
		System.out.println("\n\t" + hailstoneNum); 
	printCount header 
		System.out.println("The loop executed " + count + " times. ");
		
			
 * Testing Plan: 
1. Input: -8
	Output: "Enter a value within the range, please!" 
2. Input: 1 
3. Input: 0
4. Input: 7301
 * 
*/
import java.util.Scanner;
public class Hailstone
{
	private int hailstoneNum, count; //declaring all field variables 
	private boolean hasErrors, done;
	public Hailstone() //initializing all field variables 
	{
		hailstoneNum = 0; //this one 
		count = 0;
		hasErrors = false;
		done = false;
	}
	public static void main(String[] args)
	{
		Hailstone h = new Hailstone();
		h.findIt();
	}
	public void findIt()
	{
		System.out.println("\n\n\n"); //required 3 lines 
		while ((hasErrors == false) && (done == false))
			//loop to call other methods 
		{
			//calls the methods 
			getInput();
			calculateHailstone();
			printCount();
			if (hailstoneNum == -1) 
				done = true;
				//sentinel value: -1 
		}
		System.out.println("Thank you for playing Hailstone.");
			//exit message 
		System.out.println("\n\n\n"); //required 3 lines 
	}
	public void getInput()
	{
		Scanner keyboard = new Scanner(System.in);
		System.out.print("Enter a positive integer ( 1 - 10000 )." + 
			" To quit, enter -1:\t");
		hailstoneNum = keyboard.nextInt();
			//reinitialize field variable to user input 
	}
	public void calculateHailstone() //the heavylifting calculations
	{
		if (hailstoneNum == -1)
			done = true;
		else if (hailstoneNum <= 0 || hailstoneNum > 10000)
		{
			System.out.println("Enter a value within the range, please!");
		}
		else 
			//the value is within bounds 
		{
			if (hailstoneNum == 1)
				System.out.println("The loop executed 0 times as '1' is " 
					+ "the value we want to run this sequence to; it will " 
					+ "continue forever if we do not stop it. ");
			while(hailstoneNum != 1);
			{
				printSequence();
				if (hailstoneNum % 2 == 0) 
					hailstoneNum = hailstoneNum/2;
				else 
					hailstoneNum = 3*hailstoneNum + 1;
				count++;
			}
			System.out.println("\t1");
			count++;
		}
	}
	public void printSequence()
	{
		System.out.printf("\t%,d", hailstoneNum); 
	}
	public void printCount() 
	{
		if (hasErrors == false)
			System.out.println("\n" + "The loop executed " + count 
				+ " times. \n\n");
	}
}
